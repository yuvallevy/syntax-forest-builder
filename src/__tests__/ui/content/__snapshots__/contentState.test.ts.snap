// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`content state > adds a tree to a plot 1`] = `
{
  "plots": {
    "plot": {
      "trees": {
        "aa": {
          "nodes": {
            "a": {
              "label": "N",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                0,
                4,
              ],
              "triangle": false,
            },
            "b": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 10,
              },
              "slice": [
                5,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 0,
            "dPlotY": 0,
          },
          "sentence": "tree state",
        },
        "zz": {
          "nodes": {},
          "offset": {
            "dPlotX": 105,
            "dPlotY": 88,
          },
          "sentence": "",
        },
      },
    },
  },
}
`;

exports[`content state > deletes a node from a tree 1`] = `
{
  "plots": {
    "plot": {
      "trees": {
        "aa": {
          "nodes": {
            "a": {
              "label": "N",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                0,
                4,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 0,
            "dPlotY": 0,
          },
          "sentence": "tree state",
        },
        "zz": {
          "nodes": {
            "w": {
              "children": [
                "x",
              ],
              "label": "NP",
              "offset": {
                "dTreeX": -1,
                "dTreeY": 5,
              },
            },
            "x": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 8,
              },
              "slice": [
                0,
                5,
              ],
              "triangle": false,
            },
            "y": {
              "label": "V",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                6,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 60,
            "dPlotY": 0,
          },
          "sentence": "nodes rock",
        },
      },
    },
  },
}
`;

exports[`content state > deletes two nodes from two different trees 1`] = `
{
  "plots": {
    "plot": {
      "trees": {
        "aa": {
          "nodes": {
            "a": {
              "label": "N",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                0,
                4,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 0,
            "dPlotY": 0,
          },
          "sentence": "tree state",
        },
        "zz": {
          "nodes": {
            "w": {
              "formerDescendants": {
                "x": {
                  "label": "N",
                  "offset": {
                    "dTreeX": 1,
                    "dTreeY": 8,
                  },
                  "slice": [
                    0,
                    5,
                  ],
                  "triangle": false,
                },
              },
              "label": "NP",
              "offset": {
                "dTreeX": -1,
                "dTreeY": 5,
              },
            },
            "y": {
              "label": "V",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                6,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 60,
            "dPlotY": 0,
          },
          "sentence": "nodes rock",
        },
      },
    },
  },
}
`;

exports[`content state > inserts a node into a tree 1`] = `
{
  "plots": {
    "plot": {
      "trees": {
        "aa": {
          "nodes": {
            "a": {
              "label": "N",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                0,
                4,
              ],
              "triangle": false,
            },
            "b": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 10,
              },
              "slice": [
                5,
                10,
              ],
              "triangle": false,
            },
            "c": {
              "children": [
                "a",
                "b",
              ],
              "label": "NP",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
            },
          },
          "offset": {
            "dPlotX": 0,
            "dPlotY": 0,
          },
          "sentence": "tree state",
        },
        "zz": {
          "nodes": {
            "w": {
              "children": [
                "x",
              ],
              "label": "NP",
              "offset": {
                "dTreeX": -1,
                "dTreeY": 5,
              },
            },
            "x": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 8,
              },
              "slice": [
                0,
                5,
              ],
              "triangle": false,
            },
            "y": {
              "label": "V",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                6,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 60,
            "dPlotY": 0,
          },
          "sentence": "nodes rock",
        },
      },
    },
  },
}
`;

exports[`content state > moves a node in a tree 1`] = `
{
  "plots": {
    "plot": {
      "trees": {
        "aa": {
          "nodes": {
            "a": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": -4,
              },
              "slice": [
                0,
                4,
              ],
              "triangle": false,
            },
            "b": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 10,
              },
              "slice": [
                5,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 0,
            "dPlotY": 0,
          },
          "sentence": "tree state",
        },
        "zz": {
          "nodes": {
            "w": {
              "children": [
                "x",
              ],
              "label": "NP",
              "offset": {
                "dTreeX": -1,
                "dTreeY": 5,
              },
            },
            "x": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 8,
              },
              "slice": [
                0,
                5,
              ],
              "triangle": false,
            },
            "y": {
              "label": "V",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                6,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 60,
            "dPlotY": 0,
          },
          "sentence": "nodes rock",
        },
      },
    },
  },
}
`;

exports[`content state > reacts to a change in the sentence 1`] = `
{
  "plots": {
    "plot": {
      "trees": {
        "aa": {
          "nodes": {
            "a": {
              "label": "N",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                0,
                3,
              ],
              "triangle": false,
            },
            "b": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 10,
              },
              "slice": [
                4,
                9,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 0,
            "dPlotY": 0,
          },
          "sentence": "tee state",
        },
        "zz": {
          "nodes": {
            "w": {
              "children": [
                "x",
              ],
              "label": "NP",
              "offset": {
                "dTreeX": -1,
                "dTreeY": 5,
              },
            },
            "x": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 8,
              },
              "slice": [
                0,
                5,
              ],
              "triangle": false,
            },
            "y": {
              "label": "V",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                6,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 60,
            "dPlotY": 0,
          },
          "sentence": "nodes rock",
        },
      },
    },
  },
}
`;

exports[`content state > removes a connection between two nodes 1`] = `
{
  "plots": {
    "plot": {
      "trees": {
        "aa": {
          "nodes": {
            "a": {
              "label": "N",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                0,
                4,
              ],
              "triangle": false,
            },
            "b": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 10,
              },
              "slice": [
                5,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 0,
            "dPlotY": 0,
          },
          "sentence": "tree state",
        },
        "zz": {
          "nodes": {
            "w": {
              "formerDescendants": {
                "x": {
                  "label": "N",
                  "offset": {
                    "dTreeX": 1,
                    "dTreeY": 8,
                  },
                  "slice": [
                    0,
                    5,
                  ],
                  "triangle": false,
                },
              },
              "label": "NP",
              "offset": {
                "dTreeX": -1,
                "dTreeY": 5,
              },
            },
            "x": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 8,
              },
              "slice": [
                0,
                5,
              ],
              "triangle": false,
            },
            "y": {
              "label": "V",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                6,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 60,
            "dPlotY": 0,
          },
          "sentence": "nodes rock",
        },
      },
    },
  },
}
`;

exports[`content state > removes a tree from a plot 1`] = `
{
  "plots": {
    "plot": {
      "trees": {
        "zz": {
          "nodes": {
            "w": {
              "children": [
                "x",
              ],
              "label": "NP",
              "offset": {
                "dTreeX": -1,
                "dTreeY": 5,
              },
            },
            "x": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 8,
              },
              "slice": [
                0,
                5,
              ],
              "triangle": false,
            },
            "y": {
              "label": "V",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                6,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 60,
            "dPlotY": 0,
          },
          "sentence": "nodes rock",
        },
      },
    },
  },
}
`;

exports[`content state > resets the positions of two nodes in two different trees 1`] = `
{
  "plots": {
    "plot": {
      "trees": {
        "aa": {
          "nodes": {
            "a": {
              "label": "N",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                0,
                4,
              ],
              "triangle": false,
            },
            "b": {
              "label": "N",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                5,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 0,
            "dPlotY": 0,
          },
          "sentence": "tree state",
        },
        "zz": {
          "nodes": {
            "w": {
              "children": [
                "x",
              ],
              "label": "NP",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
            },
            "x": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 8,
              },
              "slice": [
                0,
                5,
              ],
              "triangle": false,
            },
            "y": {
              "label": "V",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                6,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 60,
            "dPlotY": 0,
          },
          "sentence": "nodes rock",
        },
      },
    },
  },
}
`;

exports[`content state > sets a node as a child of another 1`] = `
{
  "plots": {
    "plot": {
      "trees": {
        "aa": {
          "nodes": {
            "a": {
              "label": "N",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                0,
                4,
              ],
              "triangle": false,
            },
            "b": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 10,
              },
              "slice": [
                5,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 0,
            "dPlotY": 0,
          },
          "sentence": "tree state",
        },
        "zz": {
          "nodes": {
            "w": {
              "children": [
                "x",
              ],
              "label": "NP",
              "offset": {
                "dTreeX": -1,
                "dTreeY": 5,
              },
            },
            "x": {
              "children": [
                "y",
              ],
              "label": "N",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
            },
            "y": {
              "label": "V",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                6,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 60,
            "dPlotY": 0,
          },
          "sentence": "nodes rock",
        },
      },
    },
  },
}
`;

exports[`content state > sets the label of a node 1`] = `
{
  "plots": {
    "plot": {
      "trees": {
        "aa": {
          "nodes": {
            "a": {
              "label": "NP",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                0,
                4,
              ],
              "triangle": false,
            },
            "b": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 10,
              },
              "slice": [
                5,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 0,
            "dPlotY": 0,
          },
          "sentence": "tree state",
        },
        "zz": {
          "nodes": {
            "w": {
              "children": [
                "x",
              ],
              "label": "NP",
              "offset": {
                "dTreeX": -1,
                "dTreeY": 5,
              },
            },
            "x": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 8,
              },
              "slice": [
                0,
                5,
              ],
              "triangle": false,
            },
            "y": {
              "label": "V",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                6,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 60,
            "dPlotY": 0,
          },
          "sentence": "nodes rock",
        },
      },
    },
  },
}
`;

exports[`content state > sets whether a terminal node connects to its slice with a triangle 1`] = `
{
  "plots": {
    "plot": {
      "trees": {
        "aa": {
          "nodes": {
            "a": {
              "label": "N",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                0,
                4,
              ],
              "triangle": false,
            },
            "b": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 10,
              },
              "slice": [
                5,
                10,
              ],
              "triangle": true,
            },
          },
          "offset": {
            "dPlotX": 0,
            "dPlotY": 0,
          },
          "sentence": "tree state",
        },
        "zz": {
          "nodes": {
            "w": {
              "children": [
                "x",
              ],
              "label": "NP",
              "offset": {
                "dTreeX": -1,
                "dTreeY": 5,
              },
            },
            "x": {
              "label": "N",
              "offset": {
                "dTreeX": 1,
                "dTreeY": 8,
              },
              "slice": [
                0,
                5,
              ],
              "triangle": false,
            },
            "y": {
              "label": "V",
              "offset": {
                "dTreeX": 0,
                "dTreeY": 0,
              },
              "slice": [
                6,
                10,
              ],
              "triangle": false,
            },
          },
          "offset": {
            "dPlotX": 60,
            "dPlotY": 0,
          },
          "sentence": "nodes rock",
        },
      },
    },
  },
}
`;
