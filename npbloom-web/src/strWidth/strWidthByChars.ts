const charWidths: Record<string, number> = {
  '0': 8,
  '1': 8,
  '2': 8,
  '3': 8,
  '4': 8,
  '5': 8,
  '6': 8,
  '7': 8,
  '8': 8,
  '9': 8,
  ' ': 4,
  '!': 5.3333282470703125,
  '"': 6.5333404541015625,
  '#': 8,
  '$': 8,
  '%': 13.33332824707031,
  '&': 12.449996948242188,
  '\'': 2.883331298828125,
  '(': 5.3333282470703125,
  ')': 5.3333282470703125,
  '*': 8,
  '+': 9.01666259765625,
  ',': 4,
  '-': 5.3333282470703125,
  '.': 4,
  '/': 4.4499969482421875,
  ':': 4.4499969482421875,
  ';': 4.4499969482421875,
  '<': 9.01666259765625,
  '=': 9.01666259765625,
  '>': 9.01666259765625,
  '?': 7.100006103515625,
  '@': 14.73333740234375,
  'A': 11.55000305175781,
  'B': 10.666671752929688,
  'C': 10.666671752929688,
  'D': 11.55000305175781,
  'E': 9.76666259765625,
  'F': 8.899993896484375,
  'G': 11.55000305175781,
  'H': 11.55000305175781,
  'I': 5.3333282470703125,
  'J': 6.23333740234375,
  'K': 11.55000305175781,
  'L': 9.76666259765625,
  'M': 14.23333740234375,
  'N': 11.55000305175781,
  'O': 11.55000305175781,
  'P': 8.899993896484375,
  'Q': 11.55000305175781,
  'R': 10.666671752929688,
  'S': 8.899993896484375,
  'T': 9.76666259765625,
  'U': 11.55000305175781,
  'V': 11.55000305175781,
  'W': 15.100006103515625,
  'X': 11.55000305175781,
  'Y': 11.55000305175781,
  'Z': 9.76666259765625,
  '[': 5.3333282470703125,
  '\\': 4.4499969482421875,
  ']': 5.3333282470703125,
  '^': 7.5,
  '_': 8,
  '`': 5.3333282470703125,
  'a': 7.100006103515625,
  'b': 8,
  'c': 7.100006103515625,
  'd': 8,
  'e': 7.100006103515625,
  'f': 5.3333282470703125,
  'g': 8,
  'h': 8,
  'i': 4.4499969482421875,
  'j': 4.4499969482421875,
  'k': 8,
  'l': 4.4499969482421875,
  'm': 12.449996948242188,
  'n': 8,
  'o': 8,
  'p': 8,
  'q': 8,
  'r': 5.3333282470703125,
  's': 6.23333740234375,
  't': 4.4499969482421875,
  'u': 8,
  'v': 8,
  'w': 11.55000305175781,
  'x': 8,
  'y': 8,
  'z': 7.100006103515625,
  '{': 7.6833343505859375,
  '|': 3.1999969482421875,
  '}': 7.6833343505859375,
  '~': 8.649993896484375,
  '\u2080': 4.8000030517578125,  // subscript 0
  '\u2081': 4.8000030517578125,  // subscript 1
  '\u2082': 4.8000030517578125,  // subscript 2
  '\u2083': 4.8000030517578125,  // subscript 3
  '\u2084': 4.8000030517578125,  // subscript 4
  '\u2085': 4.8000030517578125,  // subscript 5
  '\u2086': 4.8000030517578125,  // subscript 6
  '\u2087': 4.8000030517578125,  // subscript 7
  '\u2088': 4.8000030517578125,  // subscript 8
  '\u2089': 4.8000030517578125,  // subscript 9
  '\u2090': 4.383331298828125,   // subscript a
  '\u2091': 4.100006103515625,   // subscript e
  '\u2095': 4.8000030517578125,  // subscript h
  '\u1d62': 2.616668701171875,   // subscript i
  '\u2c7c': 2.48333740234375,    // subscript j
  '\u2096': 4.8000030517578125,  // subscript k
  '\u2097': 2.6666717529296875,  // subscript l
  '\u2098': 7.4666595458984375,  // subscript m
  '\u2099': 4.8000030517578125,  // subscript n
  '\u2092': 4.616668701171875,   // subscript o
  '\u209a': 4.8000030517578125,  // subscript p
  '\u1d63': 3.6666717529296875,  // subscript r
  '\u209b': 3.73333740234375,    // subscript s
  '\u209c': 2.6666717529296875,  // subscript t
  '\u1d64': 5.25,                // subscript u
  '\u1d65': 4.6999969482421875,  // subscript v
  '\u2093': 4.633331298828125,   // subscript x
}

const kernPairs: Record<string, number> = {
  '11': -0.600006103515625,
  'AT': -1.76666259765625,
  'AV': -2.0500030517578125,
  'AW': -1.2833404541015625,
  'AY': -1.4666748046875,
  'Av': -1.1833343505859375,
  'Aw': -1.4666748046875,
  'Ay': -1.4666748046875,
  'F,': -1.2833251953125,
  'F.': -1.2833251953125,
  'FA': -1.1833343505859375,
  'LT': -1.4666595458984375,
  'LV': -1.4666595458984375,
  'LW': -1.1833343505859375,
  'LY': -1.600006103515625,
  'Ly': -0.883331298828125,
  'P,': -1.76666259765625,
  'P.': -1.76666259765625,
  'PA': -1.4666595458984375,
  'RT': -0.9499969482421875,
  'RV': -1.2833404541015625,
  'RW': -0.8833465576171875,
  'RY': -0.8833465576171875,
  'Ry': -0.633331298828125,
  'T,': -1.1833343505859375,
  'T-': -1.4666595458984375,
  'T.': -1.1833343505859375,
  'T:': -0.7833251953125,
  'T;': -0.883331298828125,
  'TA': -1.26666259765625,
  'TO': -0.2833251953125,
  'Ta': -1.116668701171875,
  'Tc': -1.116668701171875,
  'Te': -1.116668701171875,
  'Ti': -0.54998779296875,
  'To': -1.116668701171875,
  'Tr': -0.54998779296875,
  'Ts': -1.116668701171875,
  'Tu': -0.5500030517578125,
  'Tw': -1.116668701171875,
  'Ty': -1.116668701171875,
  'V,': -2.0500030517578125,
  'V-': -1.4666595458984375,
  'V.': -2.0500030517578125,
  'V:': -1.1833343505859375,
  'V;': -1.1833343505859375,
  'VA': -2.0500030517578125,
  'Va': -1.7666778564453125,
  'Ve': -1.7666778564453125,
  'Vi': -0.9499969482421875,
  'Vo': -2.0500030517578125,
  'Vr': -0.9499969482421875,
  'Vu': -0.9499969482421875,
  'Vy': -1.76666259765625,
  'W,': -1.4666748046875,
  'W-': -0.883331298828125,
  'W.': -1.4666748046875,
  'W:': -0.600006103515625,
  'W;': -0.600006103515625,
  'WA': -1.7666778564453125,
  'Wa': -1.2833404541015625,
  'We': -1.2833404541015625,
  'Wi': -0.633331298828125,
  'Wo': -1.2833404541015625,
  'Wr': -0.633331298828125,
  'Wu': -0.6333465576171875,
  'Wy': -0.9666748046875,
  'Y,': -2.0500030517578125,
  'Y-': -1.76666259765625,
  'Y.': -2.0500030517578125,
  'Y:': -1.4666595458984375,
  'Y;': -1.4666595458984375,
  'YA': -1.7666778564453125,
  'Ya': -1.600006103515625,
  'Ye': -1.600006103515625,
  'Yi': -0.883331298828125,
  'Yo': -1.600006103515625,
  'Yp': -1.4666748046875,
  'Yq': -1.76666259765625,
  'Yu': -1.76666259765625,
  'Yv': -1.600006103515625,
  'ff': -0.29998779296875,
  'r,': -0.649993896484375,
  'r-': -0.3333282470703125,
  'r.': -0.883331298828125,
  'rg': -0.29998779296875,
  'v,': -1.0333404541015625,
  'v.': -1.0333404541015625,
  'w,': -1.0333404541015625,
  'w.': -1.0333404541015625,
  'y,': -1.0333404541015625,
  'y.': -1.0333404541015625,
};

const cache: Record<string, number> = {};

const strWidthByChars = (str: string): number => {
  if (str === '') return 0;

  if (cache[str]) return cache[str];

  // Performance-optimized version:
  let charWidthSum = 0;
  let kernAmountSum = 0;
  for (let index = 0; index < str.length; index++) {
    charWidthSum += charWidths[str[index]] || charWidths['e'];
    if (index !== str.length - 1) kernAmountSum += kernPairs[str[index] + str[index + 1]] || 0;
  }

  // Prettier, but less performant alternative:
  // const chars = Array.from(str);
  // const charWidthSum = chars.reduce((sum, char) => sum + charWidths[char] || charWidths['e'], 0);
  // const charPairs = chars.slice(0, -1).map((char, index) => char + chars[index + 1]);
  // const kernAmountSum = charPairs.reduce((sum, charPair) => sum + (kernPairs[charPair] || 0), 0);

  return charWidthSum + kernAmountSum;
};

export default strWidthByChars;
